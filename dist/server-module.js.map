{"version":3,"file":"server-module.js","sources":["../server/modules/power/constants.ts","../server/modules/power/core.ts","../server/modules/power/index.ts","../server/modules/index.ts"],"sourcesContent":["export const POWER_TYPES = [\n  {\n    name: 'master',\n    amount: 1\n  }\n];\n\nexport const DEF_SETTING = {\n  id: 0,\n  uid: 0,\n  idCards: null,\n  powerUse: null,\n  powerTypes: null,\n  cardCategory: null\n}\n\nexport const DEF_USER_CARD = {\n  id: null,\n  type: null\n}\n\nexport default {\n  POWER_TYPES,\n  DEF_SETTING,\n  DEF_USER_CARD\n}\n","import {POWER_TYPES, DEF_SETTING, DEF_USER_CARD} from './constants'\nimport {PowerSettingStruct, PowerTypeStruct, IdCardStruct} from './interface'\n\n/**\n *  power level counter\n */\nexport default class PowerCore {\n  private doOverrideControl: (message: string) => any;\n  protected setting: PowerSettingStruct;\n  protected userCard: IdCardStruct;\n  protected logger = [];\n\n  constructor(userCard = DEF_USER_CARD, setting = DEF_SETTING) {\n    this.setting = setting;\n    this.userCard = userCard;\n    this.doOverrideControl = function(message){};\n    this.init();\n  }\n\n  init() {\n    const {setting} = this;\n\n    if (setting.powerTypes === null) {\n      setting.powerTypes = { length: 0 };\n      POWER_TYPES.map(power => {\n        this.newPower(power.name, power.amount);\n      });\n    }\n\n    if (setting.idCards === null) {\n      setting.idCards = {length: 0};\n      POWER_TYPES.map(power => {\n        this.newIdCard(power.name);\n      });\n    }\n\n    if (setting.cardCategory === null) {\n      setting.cardCategory = {};\n      POWER_TYPES.map(power => {\n        setting.cardCategory[power.name] = [];\n      });\n    }\n  }\n\n  getCard(no: number) {\n      return this.setting.idCards[no];\n  }\n\n  getPowerAmount(powerName: string) {\n    const {cardCategory} = this.setting;\n\n    if (!(powerName in cardCategory)) {\n      throw `Power ${powerName} is not defined.`;\n    }\n    return cardCategory[powerName].length;\n  }\n\n  getPowerSetting() {\n    return this.setting;\n  }\n\n  getLog() {\n    return this.logger;\n  }\n\n  onOverrideControl(callback = function(message){}) {\n    this.doOverrideControl = callback;\n  }\n\n  newCardCategory(powerName: string, cardId: string) {\n    const {cardCategory, powerTypes} = this.setting;\n    const power = powerTypes[powerName];\n\n    if (!(powerName in cardCategory)) {\n      cardCategory[powerName] = [];\n    }\n\n    const category = cardCategory[powerName];\n\n    if (category.indexOf(cardId) < 0  && category.length < power.amount) {\n      category.push(cardId);\n    }\n  }\n\n  newPower(name: string, amount: number, use: any = '*') {\n    if (!this.canUse('newIdCard'))  return false\n\n    const {userCard, setting} = this;\n    const {powerUse,  powerTypes} = setting;\n\n    if (name in powerTypes)  return false\n\n    powerTypes[name] = {\n      type: name,\n      level: powerTypes.length++,\n      amount\n    }\n\n    if (use === '*') {\n      powerUse.map(list => {\n        list.push(userCard.id);\n      });\n      return;\n    }\n\n    use.map && use.map(key => {\n      if (!(key in powerUse)) {\n        powerUse[key] = [];\n      }\n      powerUse[key].push(userCard.id);\n    });\n  }\n\n  newIdCard(powerName: string) {\n    if (!this.canUse('newIdCard')) {\n      return DEF_USER_CARD;\n    }\n\n    const {setting} = this;\n    const {idCards} = setting;\n\n    if (this.isCanNewCard(powerName)) {\n      throw `Power ${powerName} can't create new card.`;\n    }\n\n    const card:IdCardStruct = {\n      id: `power_${setting.id++}`,\n      type: powerName\n    }\n\n    this.newCardCategory(powerName, card.id);\n\n    idCards[card.id] = card;\n    idCards.length++;\n\n    return card;\n  }\n\n  isCanNewCard(powerName: string) {\n    const {powerTypes} = this.setting;\n    const power: PowerTypeStruct = powerTypes[powerName];\n    return this.getPowerAmount(powerName) >= power.amount;\n  }\n\n  canUse(key: string) {\n    const {setting, userCard} = this;\n    const {powerUse} = setting;\n\n    if (key in powerUse) {\n      const use: string = powerUse[key];\n\n      if (use.indexOf(userCard.id) < 0) {\n        const message: string = `This's card can't not use ${key} methods`;\n        this.logger.push(message);\n        this.doOverrideControl(message);\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n}\n","import PowerCore from './core'\nimport {IdCardStruct, PowerTypeStruct, PowerSettingStruct} from './interface'\nimport {DEF_USER_CARD} from './constants'\n\nexport default class Power extends PowerCore {\n  static IdCardStruct;\n  static PowerTypeStruct;\n  static PowerSettingStruct;\n\n  constructor(setting:any = null, idCard:IdCardStruct = DEF_USER_CARD) {\n    super(setting);\n\n    if (!idCard) {\n      throw `Use power function need a operator's id-card.`;\n    }\n\n    this.userCard = idCard;\n  }\n\n  swipingCard(idCard: IdCardStruct) {\n    this.userCard = idCard;\n  }\n\n  level(operator: string, card: IdCardStruct, powerName: string) {\n    if (!this.canUse('level')) {\n      return;\n    }\n    const {setting, userCard} = this;\n    const {powerTypes} = setting;\n    const cardPower: PowerTypeStruct = powerTypes[card.type];\n    const userPower: PowerTypeStruct = powerTypes[userCard.type];\n    const power: PowerTypeStruct = powerTypes[powerName];\n    const {level} = cardPower;\n\n    if (userPower.level >level && userPower.level > power.level) {\n      if ((operator === 'UP' && level < power.level) || (operator === 'DOWN' && level > power.level)) {\n        card.type = power.type;\n      }\n    }\n  }\n}\n","import power from './power';\n\nexport default {\n  power\n}\n"],"names":["power"],"mappings":"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"}